name: Pull Request Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lintowanie kodu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          cache: 'npm'

      - name: Instalacja zaleÅ¼noÅ›ci
        run: npm ci

      - name: Lintowanie
        run: npm run lint

  test:
    name: Unit testy
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          cache: 'npm'

      - name: Instalacja zaleÅ¼noÅ›ci
        run: npm ci

      - name: Uruchomienie testÃ³w z pokryciem
        run: npx vitest run --coverage
        
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 5

  status-comment:
    name: Dodanie komentarza o statusie
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Tworzenie komentarza PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let coverageSummary = '';
            
            try {
              // PrÃ³ba odczytania pliku podsumowania pokrycia
              const coverageData = fs.readFileSync('./coverage/coverage-summary.json', 'utf8');
              const coverage = JSON.parse(coverageData);
              const totalCoverage = coverage.total.statements.pct;
              coverageSummary = `ðŸ“Š **Pokrycie kodu:** ${totalCoverage}%`;
            } catch (error) {
              console.error('Nie udaÅ‚o siÄ™ odczytaÄ‡ danych pokrycia:', error);
              coverageSummary = 'ðŸ“Š **Pokrycie kodu:** Brak danych';
            }
            
            const comment = `## âœ… Testy i lintowanie przeszÅ‚y pomyÅ›lnie!
            
            ${coverageSummary}
            
            ðŸš€ PR gotowy do mergowania.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 